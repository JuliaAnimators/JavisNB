var documenterSearchIndex = {"docs":
[{"location":"references/","page":"References","title":"References","text":"CurrentModule = JavisNB","category":"page"},{"location":"references/#Public-functions","page":"References","title":"Public functions","text":"","category":"section"},{"location":"references/","page":"References","title":"References","text":"Modules = [JavisNB]\nPrivate = false","category":"page"},{"location":"references/#JavisNB.embed-Tuple{Javis.Video}","page":"References","title":"JavisNB.embed","text":"embed(\n    video::Video;\n    framerate=30,\n    pathname=\"javis_GIBBERISH.gif\",\n    liveview=false,\n    tempdirectory=\"\",\n    ffmpeg_loglevel=\"panic\",\n    rescale_factor=1.0,\n    postprocess_frame=identity,\n    postprocess_frames_flow=default_postprocess\n)\n\nThe core function of JavisNB. It allows one to show the output of Javis.render  from Javis directly within a notebook. Notebooks supported are: \n\nIJulia\nPluto\n\nTo use embed just replace Javis.render with embed.  Here is an example one can use within a Pluto notebook:\n\n# In one cell \nusing Javis, JavisNB\n\n# In a new one\nbegin\n    function ground(args...)\n        background(\"white\")\n        sethue(\"black\")\n    end\n    vid = Video(500, 500)\n    Background(1:50, ground)\n    o = Object(JCircle(O, 20, action=:fill))\n    act!(o, Action(1:25, anim_translate(Point(20, 0))))\n    act!(o, Action(26:50, anim_translate(Point(-20, 0))))\n\n    # In pure Javis here we would have\n    # render(args...;kwargs...)\n    # Instead, within a notebook one uses\n    # embed(args...;kwargs...)\n    # For example\n    embed(vid, pathname=\"rendered_with_embed.gif\")\nend\n\n\n\n\n\n","category":"method"},{"location":"references/#JavisNB.embed-Tuple{String}","page":"References","title":"JavisNB.embed","text":"embed(pathname::String)\n\nShows a gif within a notebook by calling the path to the gif.\n\nArguments\n\npathname::String: path of the gif to render in the notebook\n\n\n\n\n\n","category":"method"},{"location":"references/#Private-functions","page":"References","title":"Private functions","text":"","category":"section"},{"location":"references/","page":"References","title":"References","text":"Modules = [JavisNB]\nPublic = false","category":"page"},{"location":"references/#JavisNB.PlutoViewer","page":"References","title":"JavisNB.PlutoViewer","text":"PlutoViewer\n\nWrapper to assist viewing rendered gifs as cell outputs of Pluto notebooks when liveview = false.\n\n\n\n\n\n","category":"type"},{"location":"references/#JavisNB._jupyter_viewer-Tuple{Javis.Video, Int64, Vector{Javis.AbstractObject}, Int64}","page":"References","title":"JavisNB._jupyter_viewer","text":"_jupyter_viewer(video::Video, frames::Int, actions::Vector)\n\nCreates an interactive viewer in a Jupyter Notebook.\n\n\n\n\n\n","category":"method"},{"location":"references/#JavisNB._pluto_viewer-Tuple{Javis.Video, Int64, Vector{T} where T}","page":"References","title":"JavisNB._pluto_viewer","text":"_pluto_viewer(video::Video, frames::Int, actions::Vector)\n\nCreates an interactive viewer in a Pluto Notebook by storing all the frames in-memory.\n\nReturns\n\narr: List of Javis frames\n\n\n\n\n\n","category":"method"},{"location":"#JavisNB","page":"Home","title":"JavisNB","text":"","category":"section"},{"location":"#How-to-use-JavisNB","page":"Home","title":"How to use JavisNB","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"JavisNB is a small package for use Javis.jl within Jupyter and Pluto notebooks.","category":"page"},{"location":"","page":"Home","title":"Home","text":"It is very straightforward to use. First write all your code for an animation just like you would with Javis and then replace Javis.render with JavisNB.embed. Alongside sending the rendered animation to a file, the gif will be shown in the notebook.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The liveview argument that in Javis.render would activate the Javis Live Viewer tool is available in JavisNB.embed as well but works differently. In Pluto it returns an array of the frames composing a gif. In Jupyter it creates an interactive view of the animation and lets you scroll through the frames of the gif.","category":"page"},{"location":"#Pluto","page":"Home","title":"Pluto","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"You will need to use two packages:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Pluto - simple reactive notebooks for Julia\nPlutoUI - enables the creation of widgets in Pluto notebooks","category":"page"},{"location":"","page":"Home","title":"Home","text":"To install these packages, run the following in your Julia REPL:","category":"page"},{"location":"","page":"Home","title":"Home","text":"] add Pluto, PlutoUI","category":"page"},{"location":"","page":"Home","title":"Home","text":"After adding the packages run:","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Pluto\nPluto.run()","category":"page"},{"location":"","page":"Home","title":"Home","text":"Now you should have a working Pluto environment. For more information about Pluto check the package home page.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Once Pluto is running one can easily use Javis within a notebook using embed in place of render:","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: )","category":"page"},{"location":"","page":"Home","title":"Home","text":"Copy and paste each of the code blocks into different cells","category":"page"},{"location":"","page":"Home","title":"Home","text":"# Top cell\nusing JavisNB, Javis\n\n# Bottom cell\nbegin\n    function ground(args...)\n        background(\"blue\")\n        sethue(\"black\")\n    end\n    vid = Video(500, 150)\n    Background(1:50, ground)\n    o = Object(JCircle(Point(-100, 0), 20, action = :fill, color = \"orange\"))\n    act!(o, Action(1:25, anim_translate(Point(200, 0))))\n    act!(o, Action(26:50, anim_translate(Point(-200, 0))))\n    a = embed(vid, pathname = \"test.gif\")\nend","category":"page"},{"location":"","page":"Home","title":"Home","text":"One can also have the animation returned as an array of frames  to work on it more carefully, this is done setting liveview=true. Together with PlutoUI this allows an interactive interface: ","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: )","category":"page"},{"location":"","page":"Home","title":"Home","text":"Copy and paste each of the code blocks into different cells","category":"page"},{"location":"","page":"Home","title":"Home","text":"# Cell 1\nusing JavisNB, Javis, PlutoUI\n\n# Cell 2\nbegin\n    function ground(args...)\n        background(\"blue\")\n        sethue(\"black\")\n    end\n    vid = Video(500, 150)\n    Background(1:50, ground)\n    o = Object(JCircle(Point(-100, 0), 20, action = :fill, color = \"orange\"))\n    act!(o, Action(1:25, anim_translate(Point(200, 0))))\n    act!(o, Action(26:50, anim_translate(Point(-200, 0))))\n    a = embed(vid, pathname = \"test.gif\", liveview = true)\nend\n\n# Cell 3\n@bind idx Slider(1:length(a), show_value=true)\n\n# Cell 4\na[idx]","category":"page"},{"location":"#Jupyter","page":"Home","title":"Jupyter","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"You will need to use one package:","category":"page"},{"location":"","page":"Home","title":"Home","text":"IJulia","category":"page"},{"location":"","page":"Home","title":"Home","text":"To install it run the following in the Julia REPL","category":"page"},{"location":"","page":"Home","title":"Home","text":"] add IJulia","category":"page"},{"location":"","page":"Home","title":"Home","text":"After the package is installed type","category":"page"},{"location":"","page":"Home","title":"Home","text":"using IJulia\nnotebook()","category":"page"},{"location":"","page":"Home","title":"Home","text":"You should now have a running Jupyter notebook. If that is not the case check the IJulia documentation for possible solutions.","category":"page"},{"location":"","page":"Home","title":"Home","text":"To make the Jupyter Notebook experience with Javis as easy as possible,  calling embed to render a gif will directly show the video  as MIME element in the notebook as seen below: ","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: )","category":"page"},{"location":"","page":"Home","title":"Home","text":"Copy and paste each of the code blocks into different cells","category":"page"},{"location":"","page":"Home","title":"Home","text":"# Top cell\nusing JavisNB, Javis\n\n# Bottom cell\nbegin\n    function ground(args...)\n        background(\"blue\")\n        sethue(\"black\")\n    end\n    vid = Video(500, 150)\n    Background(1:50, ground)\n    o = Object(JCircle(Point(-100, 0), 20, action = :fill, color = \"orange\"))\n    act!(o, Action(1:25, anim_translate(Point(200, 0))))\n    act!(o, Action(26:50, anim_translate(Point(-200, 0))))\n    a = embed(vid, pathname = \"test.gif\")\nend","category":"page"},{"location":"","page":"Home","title":"Home","text":"Javis supports a minimal version of the Javis viewer using the Interact.jl package. If embed is called with liveview=true it automatically detects IJulia (the Jupyter Notebook environment) and allow for interactive scrolling of the gif frames, as seen below:","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: )","category":"page"},{"location":"","page":"Home","title":"Home","text":"Copy and paste each of the code blocks into different cells","category":"page"},{"location":"","page":"Home","title":"Home","text":"# Top cell\nusing JavisNB, Javis\n\n# Bottom cell\nbegin\n    function ground(args...)\n        background(\"blue\")\n        sethue(\"black\")\n    end\n    vid = Video(500, 150)\n    Background(1:50, ground)\n    o = Object(JCircle(Point(-100, 0), 20, action = :fill, color = \"orange\"))\n    act!(o, Action(1:25, anim_translate(Point(200, 0))))\n    act!(o, Action(26:50, anim_translate(Point(-200, 0))))\n    a = embed(vid, pathname = \"test.gif\", liveview=true)\nend","category":"page"},{"location":"#Common-Problems:","page":"Home","title":"Common Problems:","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"WebIO error (WebIO is not installed)\nThe comment in discussion here should help out with the problem.\nNo change on dragging the silder/changing the value in textbox\nTry restarting the kernel. This might problably be an error with the WebIO integration.","category":"page"}]
}
